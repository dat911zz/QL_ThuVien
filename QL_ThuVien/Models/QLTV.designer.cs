#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_ThuVien.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.ComponentModel.DataAnnotations;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_a90554_luaga123")]
	public partial class QLTVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUDE(CHUDE instance);
    partial void UpdateCHUDE(CHUDE instance);
    partial void DeleteCHUDE(CHUDE instance);
    partial void InsertNHAXUATBAN(NHAXUATBAN instance);
    partial void UpdateNHAXUATBAN(NHAXUATBAN instance);
    partial void DeleteNHAXUATBAN(NHAXUATBAN instance);
    partial void InsertSACH(SACH instance);
    partial void UpdateSACH(SACH instance);
    partial void DeleteSACH(SACH instance);
    partial void InsertTACGIA(TACGIA instance);
    partial void UpdateTACGIA(TACGIA instance);
    partial void DeleteTACGIA(TACGIA instance);
    partial void InsertTHAMGIA(THAMGIA instance);
    partial void UpdateTHAMGIA(THAMGIA instance);
    partial void DeleteTHAMGIA(THAMGIA instance);
    partial void InsertTHONGBAO(THONGBAO instance);
    partial void UpdateTHONGBAO(THONGBAO instance);
    partial void DeleteTHONGBAO(THONGBAO instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTHETHUVIEN(THETHUVIEN instance);
    partial void UpdateTHETHUVIEN(THETHUVIEN instance);
    partial void DeleteTHETHUVIEN(THETHUVIEN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertCHITIETMUONPHONG(CHITIETMUONPHONG instance);
    partial void UpdateCHITIETMUONPHONG(CHITIETMUONPHONG instance);
    partial void DeleteCHITIETMUONPHONG(CHITIETMUONPHONG instance);
    partial void InsertCHITIETMUONSACH(CHITIETMUONSACH instance);
    partial void UpdateCHITIETMUONSACH(CHITIETMUONSACH instance);
    partial void DeleteCHITIETMUONSACH(CHITIETMUONSACH instance);
    partial void InsertPHIEUMUON(PHIEUMUON instance);
    partial void UpdatePHIEUMUON(PHIEUMUON instance);
    partial void DeletePHIEUMUON(PHIEUMUON instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertBIVIPHAM(BIVIPHAM instance);
    partial void UpdateBIVIPHAM(BIVIPHAM instance);
    partial void DeleteBIVIPHAM(BIVIPHAM instance);
    partial void InsertPHIEUTRA(PHIEUTRA instance);
    partial void UpdatePHIEUTRA(PHIEUTRA instance);
    partial void DeletePHIEUTRA(PHIEUTRA instance);
    partial void InsertBANSAOSACH(BANSAOSACH instance);
    partial void UpdateBANSAOSACH(BANSAOSACH instance);
    partial void DeleteBANSAOSACH(BANSAOSACH instance);
    #endregion
		
		public QLTVDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DoAnLienMonConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUDE> CHUDEs
		{
			get
			{
				return this.GetTable<CHUDE>();
			}
		}
		
		public System.Data.Linq.Table<NHAXUATBAN> NHAXUATBANs
		{
			get
			{
				return this.GetTable<NHAXUATBAN>();
			}
		}
		
		public System.Data.Linq.Table<SACH> SACHes
		{
			get
			{
				return this.GetTable<SACH>();
			}
		}
		
		public System.Data.Linq.Table<TACGIA> TACGIAs
		{
			get
			{
				return this.GetTable<TACGIA>();
			}
		}
		
		public System.Data.Linq.Table<THAMGIA> THAMGIAs
		{
			get
			{
				return this.GetTable<THAMGIA>();
			}
		}
		
		public System.Data.Linq.Table<THONGBAO> THONGBAOs
		{
			get
			{
				return this.GetTable<THONGBAO>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THETHUVIEN> THETHUVIENs
		{
			get
			{
				return this.GetTable<THETHUVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETMUONPHONG> CHITIETMUONPHONGs
		{
			get
			{
				return this.GetTable<CHITIETMUONPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETMUONSACH> CHITIETMUONSACHes
		{
			get
			{
				return this.GetTable<CHITIETMUONSACH>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this.GetTable<PHIEUMUON>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<BIVIPHAM> BIVIPHAMs
		{
			get
			{
				return this.GetTable<BIVIPHAM>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUTRA> PHIEUTRAs
		{
			get
			{
				return this.GetTable<PHIEUTRA>();
			}
		}
		
		public System.Data.Linq.Table<BANSAOSACH> BANSAOSACHes
		{
			get
			{
				return this.GetTable<BANSAOSACH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUDE")]
	public partial class CHUDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MACHUDE;
		
		private string _TENCHUDE;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUDEChanging(int value);
    partial void OnMACHUDEChanged();
    partial void OnTENCHUDEChanging(string value);
    partial void OnTENCHUDEChanged();
    #endregion
		
		public CHUDE()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUDE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MACHUDE
		{
			get
			{
				return this._MACHUDE;
			}
			set
			{
				if ((this._MACHUDE != value))
				{
					this.OnMACHUDEChanging(value);
					this.SendPropertyChanging();
					this._MACHUDE = value;
					this.SendPropertyChanged("MACHUDE");
					this.OnMACHUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUDE", DbType="NVarChar(120)")]
		public string TENCHUDE
		{
			get
			{
				return this._TENCHUDE;
			}
			set
			{
				if ((this._TENCHUDE != value))
				{
					this.OnTENCHUDEChanging(value);
					this.SendPropertyChanging();
					this._TENCHUDE = value;
					this.SendPropertyChanged("TENCHUDE");
					this.OnTENCHUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUDE_SACH", Storage="_SACHes", ThisKey="MACHUDE", OtherKey="MACHUDE")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.CHUDE = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.CHUDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAXUATBAN")]
	public partial class NHAXUATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANXB;
		
		private string _TENNXB;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANXBChanging(int value);
    partial void OnMANXBChanged();
    partial void OnTENNXBChanging(string value);
    partial void OnTENNXBChanged();
    #endregion
		
		public NHAXUATBAN()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANXB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANXB
		{
			get
			{
				return this._MANXB;
			}
			set
			{
				if ((this._MANXB != value))
				{
					this.OnMANXBChanging(value);
					this.SendPropertyChanging();
					this._MANXB = value;
					this.SendPropertyChanged("MANXB");
					this.OnMANXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNXB", DbType="NVarChar(120)")]
		public string TENNXB
		{
			get
			{
				return this._TENNXB;
			}
			set
			{
				if ((this._TENNXB != value))
				{
					this.OnTENNXBChanging(value);
					this.SendPropertyChanging();
					this._TENNXB = value;
					this.SendPropertyChanged("TENNXB");
					this.OnTENNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_SACHes", ThisKey="MANXB", OtherKey="MANXB")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACH")]
	public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASACH;
		
		private System.Nullable<int> _MANXB;
		
		private System.Nullable<int> _MACHUDE;
		
		private string _TENSACH;
		
		private string _MOTA;
		
		private System.Nullable<System.DateTime> _NAMXUATBAN;
		
		private System.Nullable<int> _GIASACH;
		
		private string _ANHBIA;
		
		private EntitySet<THAMGIA> _THAMGIAs;
		
		private EntitySet<BANSAOSACH> _BANSAOSACHes;
		
		private EntityRef<CHUDE> _CHUDE;
		
		private EntityRef<NHAXUATBAN> _NHAXUATBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASACHChanging(int value);
    partial void OnMASACHChanged();
    partial void OnMANXBChanging(System.Nullable<int> value);
    partial void OnMANXBChanged();
    partial void OnMACHUDEChanging(System.Nullable<int> value);
    partial void OnMACHUDEChanged();
    partial void OnTENSACHChanging(string value);
    partial void OnTENSACHChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnNAMXUATBANChanging(System.Nullable<System.DateTime> value);
    partial void OnNAMXUATBANChanged();
    partial void OnGIASACHChanging(System.Nullable<int> value);
    partial void OnGIASACHChanged();
    partial void OnANHBIAChanging(string value);
    partial void OnANHBIAChanged();
    #endregion
		
		public SACH()
		{
			this._THAMGIAs = new EntitySet<THAMGIA>(new Action<THAMGIA>(this.attach_THAMGIAs), new Action<THAMGIA>(this.detach_THAMGIAs));
			this._BANSAOSACHes = new EntitySet<BANSAOSACH>(new Action<BANSAOSACH>(this.attach_BANSAOSACHes), new Action<BANSAOSACH>(this.detach_BANSAOSACHes));
			this._CHUDE = default(EntityRef<CHUDE>);
			this._NHAXUATBAN = default(EntityRef<NHAXUATBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANXB", DbType="Int")]
		public System.Nullable<int> MANXB
		{
			get
			{
				return this._MANXB;
			}
			set
			{
				if ((this._MANXB != value))
				{
					if (this._NHAXUATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANXBChanging(value);
					this.SendPropertyChanging();
					this._MANXB = value;
					this.SendPropertyChanged("MANXB");
					this.OnMANXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUDE", DbType="Int")]
		public System.Nullable<int> MACHUDE
		{
			get
			{
				return this._MACHUDE;
			}
			set
			{
				if ((this._MACHUDE != value))
				{
					if (this._CHUDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUDEChanging(value);
					this.SendPropertyChanging();
					this._MACHUDE = value;
					this.SendPropertyChanged("MACHUDE");
					this.OnMACHUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSACH", DbType="NVarChar(120)")]
		public string TENSACH
		{
			get
			{
				return this._TENSACH;
			}
			set
			{
				if ((this._TENSACH != value))
				{
					this.OnTENSACHChanging(value);
					this.SendPropertyChanging();
					this._TENSACH = value;
					this.SendPropertyChanged("TENSACH");
					this.OnTENSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMXUATBAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> NAMXUATBAN
		{
			get
			{
				return this._NAMXUATBAN;
			}
			set
			{
				if ((this._NAMXUATBAN != value))
				{
					this.OnNAMXUATBANChanging(value);
					this.SendPropertyChanging();
					this._NAMXUATBAN = value;
					this.SendPropertyChanged("NAMXUATBAN");
					this.OnNAMXUATBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIASACH", DbType="Int")]
		public System.Nullable<int> GIASACH
		{
			get
			{
				return this._GIASACH;
			}
			set
			{
				if ((this._GIASACH != value))
				{
					this.OnGIASACHChanging(value);
					this.SendPropertyChanging();
					this._GIASACH = value;
					this.SendPropertyChanged("GIASACH");
					this.OnGIASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHBIA", DbType="Char(120)")]
		public string ANHBIA
		{
			get
			{
				return this._ANHBIA;
			}
			set
			{
				if ((this._ANHBIA != value))
				{
					this.OnANHBIAChanging(value);
					this.SendPropertyChanging();
					this._ANHBIA = value;
					this.SendPropertyChanged("ANHBIA");
					this.OnANHBIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_THAMGIA", Storage="_THAMGIAs", ThisKey="MASACH", OtherKey="MASACH")]
		public EntitySet<THAMGIA> THAMGIAs
		{
			get
			{
				return this._THAMGIAs;
			}
			set
			{
				this._THAMGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_BANSAOSACH", Storage="_BANSAOSACHes", ThisKey="MASACH", OtherKey="MASACH")]
		public EntitySet<BANSAOSACH> BANSAOSACHes
		{
			get
			{
				return this._BANSAOSACHes;
			}
			set
			{
				this._BANSAOSACHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUDE_SACH", Storage="_CHUDE", ThisKey="MACHUDE", OtherKey="MACHUDE", IsForeignKey=true)]
		public CHUDE CHUDE
		{
			get
			{
				return this._CHUDE.Entity;
			}
			set
			{
				CHUDE previousValue = this._CHUDE.Entity;
				if (((previousValue != value) 
							|| (this._CHUDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUDE.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._CHUDE.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._MACHUDE = value.MACHUDE;
					}
					else
					{
						this._MACHUDE = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_NHAXUATBAN", ThisKey="MANXB", OtherKey="MANXB", IsForeignKey=true)]
		public NHAXUATBAN NHAXUATBAN
		{
			get
			{
				return this._NHAXUATBAN.Entity;
			}
			set
			{
				NHAXUATBAN previousValue = this._NHAXUATBAN.Entity;
				if (((previousValue != value) 
							|| (this._NHAXUATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAXUATBAN.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._NHAXUATBAN.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._MANXB = value.MANXB;
					}
					else
					{
						this._MANXB = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAXUATBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THAMGIAs(THAMGIA entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_THAMGIAs(THAMGIA entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
		
		private void attach_BANSAOSACHes(BANSAOSACH entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_BANSAOSACHes(BANSAOSACH entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TACGIA")]
	public partial class TACGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATACGIA;
		
		private string _TENTACGIA;
		
		private EntitySet<THAMGIA> _THAMGIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATACGIAChanging(int value);
    partial void OnMATACGIAChanged();
    partial void OnTENTACGIAChanging(string value);
    partial void OnTENTACGIAChanged();
    #endregion
		
		public TACGIA()
		{
			this._THAMGIAs = new EntitySet<THAMGIA>(new Action<THAMGIA>(this.attach_THAMGIAs), new Action<THAMGIA>(this.detach_THAMGIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATACGIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATACGIA
		{
			get
			{
				return this._MATACGIA;
			}
			set
			{
				if ((this._MATACGIA != value))
				{
					this.OnMATACGIAChanging(value);
					this.SendPropertyChanging();
					this._MATACGIA = value;
					this.SendPropertyChanged("MATACGIA");
					this.OnMATACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTACGIA", DbType="NVarChar(120)")]
		public string TENTACGIA
		{
			get
			{
				return this._TENTACGIA;
			}
			set
			{
				if ((this._TENTACGIA != value))
				{
					this.OnTENTACGIAChanging(value);
					this.SendPropertyChanging();
					this._TENTACGIA = value;
					this.SendPropertyChanged("TENTACGIA");
					this.OnTENTACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_THAMGIA", Storage="_THAMGIAs", ThisKey="MATACGIA", OtherKey="MATACGIA")]
		public EntitySet<THAMGIA> THAMGIAs
		{
			get
			{
				return this._THAMGIAs;
			}
			set
			{
				this._THAMGIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THAMGIAs(THAMGIA entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = this;
		}
		
		private void detach_THAMGIAs(THAMGIA entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMGIA")]
	public partial class THAMGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASACH;
		
		private int _MATACGIA;
		
		private string _VAITRO;
		
		private EntityRef<SACH> _SACH;
		
		private EntityRef<TACGIA> _TACGIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASACHChanging(int value);
    partial void OnMASACHChanged();
    partial void OnMATACGIAChanging(int value);
    partial void OnMATACGIAChanged();
    partial void OnVAITROChanging(string value);
    partial void OnVAITROChanged();
    #endregion
		
		public THAMGIA()
		{
			this._SACH = default(EntityRef<SACH>);
			this._TACGIA = default(EntityRef<TACGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATACGIA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATACGIA
		{
			get
			{
				return this._MATACGIA;
			}
			set
			{
				if ((this._MATACGIA != value))
				{
					if (this._TACGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATACGIAChanging(value);
					this.SendPropertyChanging();
					this._MATACGIA = value;
					this.SendPropertyChanged("MATACGIA");
					this.OnMATACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAITRO", DbType="Char(60)")]
		public string VAITRO
		{
			get
			{
				return this._VAITRO;
			}
			set
			{
				if ((this._VAITRO != value))
				{
					this.OnVAITROChanging(value);
					this.SendPropertyChanging();
					this._VAITRO = value;
					this.SendPropertyChanged("VAITRO");
					this.OnVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_THAMGIA", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.THAMGIAs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.THAMGIAs.Add(this);
						this._MASACH = value.MASACH;
					}
					else
					{
						this._MASACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_THAMGIA", Storage="_TACGIA", ThisKey="MATACGIA", OtherKey="MATACGIA", IsForeignKey=true)]
		public TACGIA TACGIA
		{
			get
			{
				return this._TACGIA.Entity;
			}
			set
			{
				TACGIA previousValue = this._TACGIA.Entity;
				if (((previousValue != value) 
							|| (this._TACGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TACGIA.Entity = null;
						previousValue.THAMGIAs.Remove(this);
					}
					this._TACGIA.Entity = value;
					if ((value != null))
					{
						value.THAMGIAs.Add(this);
						this._MATACGIA = value.MATACGIA;
					}
					else
					{
						this._MATACGIA = default(int);
					}
					this.SendPropertyChanged("TACGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGBAO")]
	public partial class THONGBAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATHONGBAO;
		
		private int _MANGUOITAO;
		
		private string _TIEUDE;
		
		private string _NOIDUNG;
		
		private System.DateTime _THOIGIAN;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHONGBAOChanging(int value);
    partial void OnMATHONGBAOChanged();
    partial void OnMANGUOITAOChanging(int value);
    partial void OnMANGUOITAOChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnTHOIGIANChanging(System.DateTime value);
    partial void OnTHOIGIANChanged();
    #endregion
		
		public THONGBAO()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHONGBAO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATHONGBAO
		{
			get
			{
				return this._MATHONGBAO;
			}
			set
			{
				if ((this._MATHONGBAO != value))
				{
					this.OnMATHONGBAOChanging(value);
					this.SendPropertyChanging();
					this._MATHONGBAO = value;
					this.SendPropertyChanged("MATHONGBAO");
					this.OnMATHONGBAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANGUOITAO", DbType="Int NOT NULL")]
		public int MANGUOITAO
		{
			get
			{
				return this._MANGUOITAO;
			}
			set
			{
				if ((this._MANGUOITAO != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANGUOITAOChanging(value);
					this.SendPropertyChanging();
					this._MANGUOITAO = value;
					this.SendPropertyChanged("MANGUOITAO");
					this.OnMANGUOITAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIAN", DbType="DateTime NOT NULL")]
		public System.DateTime THOIGIAN
		{
			get
			{
				return this._THOIGIAN;
			}
			set
			{
				if ((this._THOIGIAN != value))
				{
					this.OnTHOIGIANChanging(value);
					this.SendPropertyChanging();
					this._THOIGIAN = value;
					this.SendPropertyChanged("THOIGIAN");
					this.OnTHOIGIANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGBAO", Storage="_TAIKHOAN", ThisKey="MANGUOITAO", OtherKey="MATAIKHOAN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.THONGBAOs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.THONGBAOs.Add(this);
						this._MANGUOITAO = value.MATAIKHOAN;
					}
					else
					{
						this._MANGUOITAO = default(int);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATAIKHOAN;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private string _TENDN;
		
		private string _MATKHAU;
		
		private string _CHUCVU;
		
		private EntitySet<THONGBAO> _THONGBAOs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATAIKHOANChanging(int value);
    partial void OnMATAIKHOANChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._THONGBAOs = new EntitySet<THONGBAO>(new Action<THONGBAO>(this.attach_THONGBAOs), new Action<THONGBAO>(this.detach_THONGBAOs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATAIKHOAN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATAIKHOAN
		{
			get
			{
				return this._MATAIKHOAN;
			}
			set
			{
				if ((this._MATAIKHOAN != value))
				{
					this.OnMATAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._MATAIKHOAN = value;
					this.SendPropertyChanged("MATAIKHOAN");
					this.OnMATAIKHOANChanged();
				}
			}
		}
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập tên đăng nhập!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="VarChar(120)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập mật khẩu!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng chọn chức vụ!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGBAO", Storage="_THONGBAOs", ThisKey="MATAIKHOAN", OtherKey="MANGUOITAO")]
		public EntitySet<THONGBAO> THONGBAOs
		{
			get
			{
				return this._THONGBAOs;
			}
			set
			{
				this._THONGBAOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MATAIKHOAN", OtherKey="MATAIKHOAN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THONGBAOs(THONGBAO entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_THONGBAOs(THONGBAO entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THETHUVIEN")]
	public partial class THETHUVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATTV;
		
		private string _HOTEN;
		
		private string _SODIENTHOAI;
		
		private System.Nullable<bool> _NGUOINGOAI;
		
		private string _EMAIL;
		
		private string _DIACHI;
		
		private System.DateTime _NGAYCAP;
		
		private System.DateTime _NGAYHETHAN;
		
		private EntitySet<CHITIETMUONPHONG> _CHITIETMUONPHONGs;
		
		private EntitySet<PHIEUMUON> _PHIEUMUONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATTVChanging(int value);
    partial void OnMATTVChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnSODIENTHOAIChanging(string value);
    partial void OnSODIENTHOAIChanged();
    partial void OnNGUOINGOAIChanging(System.Nullable<bool> value);
    partial void OnNGUOINGOAIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnNGAYCAPChanging(System.DateTime value);
    partial void OnNGAYCAPChanged();
    partial void OnNGAYHETHANChanging(System.DateTime value);
    partial void OnNGAYHETHANChanged();
    #endregion
		
		public THETHUVIEN()
		{
			this._CHITIETMUONPHONGs = new EntitySet<CHITIETMUONPHONG>(new Action<CHITIETMUONPHONG>(this.attach_CHITIETMUONPHONGs), new Action<CHITIETMUONPHONG>(this.detach_CHITIETMUONPHONGs));
			this._PHIEUMUONs = new EntitySet<PHIEUMUON>(new Action<PHIEUMUON>(this.attach_PHIEUMUONs), new Action<PHIEUMUON>(this.detach_PHIEUMUONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATTV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATTV
		{
			get
			{
				return this._MATTV;
			}
			set
			{
				if ((this._MATTV != value))
				{
					this.OnMATTVChanging(value);
					this.SendPropertyChanging();
					this._MATTV = value;
					this.SendPropertyChanged("MATTV");
					this.OnMATTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(120)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAI", DbType="Char(10)")]
		public string SODIENTHOAI
		{
			get
			{
				return this._SODIENTHOAI;
			}
			set
			{
				if ((this._SODIENTHOAI != value))
				{
					this.OnSODIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAI = value;
					this.SendPropertyChanged("SODIENTHOAI");
					this.OnSODIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGUOINGOAI", DbType="Bit")]
		public System.Nullable<bool> NGUOINGOAI
		{
			get
			{
				return this._NGUOINGOAI;
			}
			set
			{
				if ((this._NGUOINGOAI != value))
				{
					this.OnNGUOINGOAIChanging(value);
					this.SendPropertyChanging();
					this._NGUOINGOAI = value;
					this.SendPropertyChanged("NGUOINGOAI");
					this.OnNGUOINGOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(120)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(200)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAP", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYCAP
		{
			get
			{
				return this._NGAYCAP;
			}
			set
			{
				if ((this._NGAYCAP != value))
				{
					this.OnNGAYCAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAP = value;
					this.SendPropertyChanged("NGAYCAP");
					this.OnNGAYCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYHETHAN", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYHETHAN
		{
			get
			{
				return this._NGAYHETHAN;
			}
			set
			{
				if ((this._NGAYHETHAN != value))
				{
					this.OnNGAYHETHANChanging(value);
					this.SendPropertyChanging();
					this._NGAYHETHAN = value;
					this.SendPropertyChanged("NGAYHETHAN");
					this.OnNGAYHETHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THETHUVIEN_CHITIETMUONPHONG", Storage="_CHITIETMUONPHONGs", ThisKey="MATTV", OtherKey="MANSD")]
		public EntitySet<CHITIETMUONPHONG> CHITIETMUONPHONGs
		{
			get
			{
				return this._CHITIETMUONPHONGs;
			}
			set
			{
				this._CHITIETMUONPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THETHUVIEN_PHIEUMUON", Storage="_PHIEUMUONs", ThisKey="MATTV", OtherKey="MANSD")]
		public EntitySet<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this._PHIEUMUONs;
			}
			set
			{
				this._PHIEUMUONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONPHONGs(CHITIETMUONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THETHUVIEN = this;
		}
		
		private void detach_CHITIETMUONPHONGs(CHITIETMUONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THETHUVIEN = null;
		}
		
		private void attach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.THETHUVIEN = this;
		}
		
		private void detach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.THETHUVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHONG;
		
		private string _TENPHONG;
		
		private string _VITRI;
		
		private EntitySet<CHITIETMUONPHONG> _CHITIETMUONPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(int value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnVITRIChanging(string value);
    partial void OnVITRIChanged();
    #endregion
		
		public PHONG()
		{
			this._CHITIETMUONPHONGs = new EntitySet<CHITIETMUONPHONG>(new Action<CHITIETMUONPHONG>(this.attach_CHITIETMUONPHONGs), new Action<CHITIETMUONPHONG>(this.detach_CHITIETMUONPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VITRI", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string VITRI
		{
			get
			{
				return this._VITRI;
			}
			set
			{
				if ((this._VITRI != value))
				{
					this.OnVITRIChanging(value);
					this.SendPropertyChanging();
					this._VITRI = value;
					this.SendPropertyChanged("VITRI");
					this.OnVITRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETMUONPHONG", Storage="_CHITIETMUONPHONGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<CHITIETMUONPHONG> CHITIETMUONPHONGs
		{
			get
			{
				return this._CHITIETMUONPHONGs;
			}
			set
			{
				this._CHITIETMUONPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONPHONGs(CHITIETMUONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CHITIETMUONPHONGs(CHITIETMUONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETMUONPHONG")]
	public partial class CHITIETMUONPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANSD;
		
		private int _MAPHONG;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private System.DateTime _THOIGIANMUON;
		
		private System.DateTime _THOIGIANTRA;
		
		private EntityRef<THETHUVIEN> _THETHUVIEN;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANSDChanging(int value);
    partial void OnMANSDChanged();
    partial void OnMAPHONGChanging(int value);
    partial void OnMAPHONGChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    partial void OnTHOIGIANMUONChanging(System.DateTime value);
    partial void OnTHOIGIANMUONChanged();
    partial void OnTHOIGIANTRAChanging(System.DateTime value);
    partial void OnTHOIGIANTRAChanged();
    #endregion
		
		public CHITIETMUONPHONG()
		{
			this._THETHUVIEN = default(EntityRef<THETHUVIEN>);
			this._PHONG = default(EntityRef<PHONG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANSD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MANSD
		{
			get
			{
				return this._MANSD;
			}
			set
			{
				if ((this._MANSD != value))
				{
					if (this._THETHUVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANSDChanging(value);
					this.SendPropertyChanging();
					this._MANSD = value;
					this.SendPropertyChanged("MANSD");
					this.OnMANSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANMUON", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime THOIGIANMUON
		{
			get
			{
				return this._THOIGIANMUON;
			}
			set
			{
				if ((this._THOIGIANMUON != value))
				{
					this.OnTHOIGIANMUONChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANMUON = value;
					this.SendPropertyChanged("THOIGIANMUON");
					this.OnTHOIGIANMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANTRA", DbType="DateTime NOT NULL")]
		public System.DateTime THOIGIANTRA
		{
			get
			{
				return this._THOIGIANTRA;
			}
			set
			{
				if ((this._THOIGIANTRA != value))
				{
					this.OnTHOIGIANTRAChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANTRA = value;
					this.SendPropertyChanged("THOIGIANTRA");
					this.OnTHOIGIANTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THETHUVIEN_CHITIETMUONPHONG", Storage="_THETHUVIEN", ThisKey="MANSD", OtherKey="MATTV", IsForeignKey=true)]
		public THETHUVIEN THETHUVIEN
		{
			get
			{
				return this._THETHUVIEN.Entity;
			}
			set
			{
				THETHUVIEN previousValue = this._THETHUVIEN.Entity;
				if (((previousValue != value) 
							|| (this._THETHUVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THETHUVIEN.Entity = null;
						previousValue.CHITIETMUONPHONGs.Remove(this);
					}
					this._THETHUVIEN.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONPHONGs.Add(this);
						this._MANSD = value.MATTV;
					}
					else
					{
						this._MANSD = default(int);
					}
					this.SendPropertyChanged("THETHUVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETMUONPHONG", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CHITIETMUONPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONPHONGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(int);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETMUONPHONG", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHITIETMUONPHONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONPHONGs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETMUONSACH")]
	public partial class CHITIETMUONSACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASACH;
		
		private int _MABANSAO;
		
		private int _MAPHIEUMUON;
		
		private EntityRef<PHIEUMUON> _PHIEUMUON;
		
		private EntityRef<BANSAOSACH> _BANSAOSACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASACHChanging(int value);
    partial void OnMASACHChanged();
    partial void OnMABANSAOChanging(int value);
    partial void OnMABANSAOChanged();
    partial void OnMAPHIEUMUONChanging(int value);
    partial void OnMAPHIEUMUONChanged();
    #endregion
		
		public CHITIETMUONSACH()
		{
			this._PHIEUMUON = default(EntityRef<PHIEUMUON>);
			this._BANSAOSACH = default(EntityRef<BANSAOSACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._BANSAOSACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABANSAO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MABANSAO
		{
			get
			{
				return this._MABANSAO;
			}
			set
			{
				if ((this._MABANSAO != value))
				{
					if (this._BANSAOSACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABANSAOChanging(value);
					this.SendPropertyChanging();
					this._MABANSAO = value;
					this.SendPropertyChanged("MABANSAO");
					this.OnMABANSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUMUON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_CHITIETMUONSACH", Storage="_PHIEUMUON", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON", IsForeignKey=true)]
		public PHIEUMUON PHIEUMUON
		{
			get
			{
				return this._PHIEUMUON.Entity;
			}
			set
			{
				PHIEUMUON previousValue = this._PHIEUMUON.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUMUON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUMUON.Entity = null;
						previousValue.CHITIETMUONSACHes.Remove(this);
					}
					this._PHIEUMUON.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONSACHes.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
					}
					else
					{
						this._MAPHIEUMUON = default(int);
					}
					this.SendPropertyChanged("PHIEUMUON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANSAOSACH_CHITIETMUONSACH", Storage="_BANSAOSACH", ThisKey="MASACH,MABANSAO", OtherKey="MASACH,MABANSAO", IsForeignKey=true)]
		public BANSAOSACH BANSAOSACH
		{
			get
			{
				return this._BANSAOSACH.Entity;
			}
			set
			{
				BANSAOSACH previousValue = this._BANSAOSACH.Entity;
				if (((previousValue != value) 
							|| (this._BANSAOSACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BANSAOSACH.Entity = null;
						previousValue.CHITIETMUONSACHes.Remove(this);
					}
					this._BANSAOSACH.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONSACHes.Add(this);
						this._MASACH = value.MASACH;
						this._MABANSAO = value.MABANSAO;
					}
					else
					{
						this._MASACH = default(int);
						this._MABANSAO = default(int);
					}
					this.SendPropertyChanged("BANSAOSACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUMUON")]
	public partial class PHIEUMUON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIEUMUON;
		
		private System.Nullable<int> _MANHANVIEN;
		
		private int _MANSD;
		
		private System.DateTime _NGAYMUON;
		
		private System.DateTime _NGAYTRA;
		
		private EntitySet<CHITIETMUONSACH> _CHITIETMUONSACHes;
		
		private EntitySet<PHIEUTRA> _PHIEUTRAs;
		
		private EntityRef<THETHUVIEN> _THETHUVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(int value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMANHANVIENChanging(System.Nullable<int> value);
    partial void OnMANHANVIENChanged();
    partial void OnMANSDChanging(int value);
    partial void OnMANSDChanged();
    partial void OnNGAYMUONChanging(System.DateTime value);
    partial void OnNGAYMUONChanged();
    partial void OnNGAYTRAChanging(System.DateTime value);
    partial void OnNGAYTRAChanged();
    #endregion
		
		public PHIEUMUON()
		{
			this._CHITIETMUONSACHes = new EntitySet<CHITIETMUONSACH>(new Action<CHITIETMUONSACH>(this.attach_CHITIETMUONSACHes), new Action<CHITIETMUONSACH>(this.detach_CHITIETMUONSACHes));
			this._PHIEUTRAs = new EntitySet<PHIEUTRA>(new Action<PHIEUTRA>(this.attach_PHIEUTRAs), new Action<PHIEUTRA>(this.detach_PHIEUTRAs));
			this._THETHUVIEN = default(EntityRef<THETHUVIEN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", DbType="Int")]
		public System.Nullable<int> MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANSD", DbType="Int NOT NULL")]
		public int MANSD
		{
			get
			{
				return this._MANSD;
			}
			set
			{
				if ((this._MANSD != value))
				{
					if (this._THETHUVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANSDChanging(value);
					this.SendPropertyChanging();
					this._MANSD = value;
					this.SendPropertyChanged("MANSD");
					this.OnMANSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYMUON", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYMUON
		{
			get
			{
				return this._NGAYMUON;
			}
			set
			{
				if ((this._NGAYMUON != value))
				{
					this.OnNGAYMUONChanging(value);
					this.SendPropertyChanging();
					this._NGAYMUON = value;
					this.SendPropertyChanged("NGAYMUON");
					this.OnNGAYMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRA", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYTRA
		{
			get
			{
				return this._NGAYTRA;
			}
			set
			{
				if ((this._NGAYTRA != value))
				{
					this.OnNGAYTRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRA = value;
					this.SendPropertyChanged("NGAYTRA");
					this.OnNGAYTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_CHITIETMUONSACH", Storage="_CHITIETMUONSACHes", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON")]
		public EntitySet<CHITIETMUONSACH> CHITIETMUONSACHes
		{
			get
			{
				return this._CHITIETMUONSACHes;
			}
			set
			{
				this._CHITIETMUONSACHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_PHIEUTRA", Storage="_PHIEUTRAs", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON")]
		public EntitySet<PHIEUTRA> PHIEUTRAs
		{
			get
			{
				return this._PHIEUTRAs;
			}
			set
			{
				this._PHIEUTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THETHUVIEN_PHIEUMUON", Storage="_THETHUVIEN", ThisKey="MANSD", OtherKey="MATTV", IsForeignKey=true)]
		public THETHUVIEN THETHUVIEN
		{
			get
			{
				return this._THETHUVIEN.Entity;
			}
			set
			{
				THETHUVIEN previousValue = this._THETHUVIEN.Entity;
				if (((previousValue != value) 
							|| (this._THETHUVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THETHUVIEN.Entity = null;
						previousValue.PHIEUMUONs.Remove(this);
					}
					this._THETHUVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUMUONs.Add(this);
						this._MANSD = value.MATTV;
					}
					else
					{
						this._MANSD = default(int);
					}
					this.SendPropertyChanged("THETHUVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUMUON", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUMUONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUMUONs.Add(this);
						this._MANHANVIEN = value.MANHANVIEN;
					}
					else
					{
						this._MANHANVIEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONSACHes(CHITIETMUONSACH entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = this;
		}
		
		private void detach_CHITIETMUONSACHes(CHITIETMUONSACH entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = null;
		}
		
		private void attach_PHIEUTRAs(PHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = this;
		}
		
		private void detach_PHIEUTRAs(PHIEUTRA entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUMUON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANHANVIEN;
		
		private System.Nullable<int> _MATAIKHOAN;
		
		private string _HOTEN;
		
		private System.DateTime _NGAYSINH;
		
		private string _SODIENTHOAI;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
		private EntitySet<CHITIETMUONPHONG> _CHITIETMUONPHONGs;
		
		private EntitySet<PHIEUMUON> _PHIEUMUONs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHANVIENChanging(int value);
    partial void OnMANHANVIENChanged();
    partial void OnMATAIKHOANChanging(System.Nullable<int> value);
    partial void OnMATAIKHOANChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnSODIENTHOAIChanging(string value);
    partial void OnSODIENTHOAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			this._CHITIETMUONPHONGs = new EntitySet<CHITIETMUONPHONG>(new Action<CHITIETMUONPHONG>(this.attach_CHITIETMUONPHONGs), new Action<CHITIETMUONPHONG>(this.detach_CHITIETMUONPHONGs));
			this._PHIEUMUONs = new EntitySet<PHIEUMUON>(new Action<PHIEUMUON>(this.attach_PHIEUMUONs), new Action<PHIEUMUON>(this.detach_PHIEUMUONs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHANVIEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANHANVIEN
		{
			get
			{
				return this._MANHANVIEN;
			}
			set
			{
				if ((this._MANHANVIEN != value))
				{
					this.OnMANHANVIENChanging(value);
					this.SendPropertyChanging();
					this._MANHANVIEN = value;
					this.SendPropertyChanged("MANHANVIEN");
					this.OnMANHANVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATAIKHOAN", DbType="Int")]
		public System.Nullable<int> MATAIKHOAN
		{
			get
			{
				return this._MATAIKHOAN;
			}
			set
			{
				if ((this._MATAIKHOAN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._MATAIKHOAN = value;
					this.SendPropertyChanged("MATAIKHOAN");
					this.OnMATAIKHOANChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập họ tên!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập ngày sinh!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập SĐT!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SODIENTHOAI
		{
			get
			{
				return this._SODIENTHOAI;
			}
			set
			{
				if ((this._SODIENTHOAI != value))
				{
					this.OnSODIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAI = value;
					this.SendPropertyChanged("SODIENTHOAI");
					this.OnSODIENTHOAIChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập địa chỉ!")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		[Required(ErrorMessage = "Vui lòng nhập email!")]
		[RegularExpression(@"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}", ErrorMessage = "Hãy nhập địa chỉ email hợp lệ.\nExample@gmail.com")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETMUONPHONG", Storage="_CHITIETMUONPHONGs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<CHITIETMUONPHONG> CHITIETMUONPHONGs
		{
			get
			{
				return this._CHITIETMUONPHONGs;
			}
			set
			{
				this._CHITIETMUONPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUMUON", Storage="_PHIEUMUONs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN")]
		public EntitySet<PHIEUMUON> PHIEUMUONs
		{
			get
			{
				return this._PHIEUMUONs;
			}
			set
			{
				this._PHIEUMUONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="MATAIKHOAN", OtherKey="MATAIKHOAN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MATAIKHOAN = value.MATAIKHOAN;
					}
					else
					{
						this._MATAIKHOAN = default(Nullable<int>);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_CHITIETMUONPHONGs(CHITIETMUONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CHITIETMUONPHONGs(CHITIETMUONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUMUONs(PHIEUMUON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIVIPHAM")]
	public partial class BIVIPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAVIPHAM;
		
		private int _MAPHIEUMUON;
		
		private int _MAPHIEUTRA;
		
		private EntityRef<PHIEUTRA> _PHIEUTRA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAVIPHAMChanging(int value);
    partial void OnMAVIPHAMChanged();
    partial void OnMAPHIEUMUONChanging(int value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMAPHIEUTRAChanging(int value);
    partial void OnMAPHIEUTRAChanged();
    #endregion
		
		public BIVIPHAM()
		{
			this._PHIEUTRA = default(EntityRef<PHIEUTRA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAVIPHAM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAVIPHAM
		{
			get
			{
				return this._MAVIPHAM;
			}
			set
			{
				if ((this._MAVIPHAM != value))
				{
					this.OnMAVIPHAMChanging(value);
					this.SendPropertyChanging();
					this._MAVIPHAM = value;
					this.SendPropertyChanged("MAVIPHAM");
					this.OnMAVIPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUTRA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUTRA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHIEUTRA
		{
			get
			{
				return this._MAPHIEUTRA;
			}
			set
			{
				if ((this._MAPHIEUTRA != value))
				{
					if (this._PHIEUTRA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUTRAChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUTRA = value;
					this.SendPropertyChanged("MAPHIEUTRA");
					this.OnMAPHIEUTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_BIVIPHAM", Storage="_PHIEUTRA", ThisKey="MAPHIEUMUON,MAPHIEUTRA", OtherKey="MAPHIEUMUON,MAPHIEUTRA", IsForeignKey=true)]
		public PHIEUTRA PHIEUTRA
		{
			get
			{
				return this._PHIEUTRA.Entity;
			}
			set
			{
				PHIEUTRA previousValue = this._PHIEUTRA.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUTRA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUTRA.Entity = null;
						previousValue.BIVIPHAMs.Remove(this);
					}
					this._PHIEUTRA.Entity = value;
					if ((value != null))
					{
						value.BIVIPHAMs.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
						this._MAPHIEUTRA = value.MAPHIEUTRA;
					}
					else
					{
						this._MAPHIEUMUON = default(int);
						this._MAPHIEUTRA = default(int);
					}
					this.SendPropertyChanged("PHIEUTRA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUTRA")]
	public partial class PHIEUTRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIEUMUON;
		
		private int _MAPHIEUTRA;
		
		private System.DateTime _NGAYTRATHAT;
		
		private EntitySet<BIVIPHAM> _BIVIPHAMs;
		
		private EntityRef<PHIEUMUON> _PHIEUMUON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUMUONChanging(int value);
    partial void OnMAPHIEUMUONChanged();
    partial void OnMAPHIEUTRAChanging(int value);
    partial void OnMAPHIEUTRAChanged();
    partial void OnNGAYTRATHATChanging(System.DateTime value);
    partial void OnNGAYTRATHATChanged();
    #endregion
		
		public PHIEUTRA()
		{
			this._BIVIPHAMs = new EntitySet<BIVIPHAM>(new Action<BIVIPHAM>(this.attach_BIVIPHAMs), new Action<BIVIPHAM>(this.detach_BIVIPHAMs));
			this._PHIEUMUON = default(EntityRef<PHIEUMUON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUMUON", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHIEUMUON
		{
			get
			{
				return this._MAPHIEUMUON;
			}
			set
			{
				if ((this._MAPHIEUMUON != value))
				{
					if (this._PHIEUMUON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUMUONChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUMUON = value;
					this.SendPropertyChanged("MAPHIEUMUON");
					this.OnMAPHIEUMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEUTRA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHIEUTRA
		{
			get
			{
				return this._MAPHIEUTRA;
			}
			set
			{
				if ((this._MAPHIEUTRA != value))
				{
					this.OnMAPHIEUTRAChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEUTRA = value;
					this.SendPropertyChanged("MAPHIEUTRA");
					this.OnMAPHIEUTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRATHAT", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYTRATHAT
		{
			get
			{
				return this._NGAYTRATHAT;
			}
			set
			{
				if ((this._NGAYTRATHAT != value))
				{
					this.OnNGAYTRATHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRATHAT = value;
					this.SendPropertyChanged("NGAYTRATHAT");
					this.OnNGAYTRATHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUTRA_BIVIPHAM", Storage="_BIVIPHAMs", ThisKey="MAPHIEUMUON,MAPHIEUTRA", OtherKey="MAPHIEUMUON,MAPHIEUTRA")]
		public EntitySet<BIVIPHAM> BIVIPHAMs
		{
			get
			{
				return this._BIVIPHAMs;
			}
			set
			{
				this._BIVIPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUMUON_PHIEUTRA", Storage="_PHIEUMUON", ThisKey="MAPHIEUMUON", OtherKey="MAPHIEUMUON", IsForeignKey=true)]
		public PHIEUMUON PHIEUMUON
		{
			get
			{
				return this._PHIEUMUON.Entity;
			}
			set
			{
				PHIEUMUON previousValue = this._PHIEUMUON.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUMUON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUMUON.Entity = null;
						previousValue.PHIEUTRAs.Remove(this);
					}
					this._PHIEUMUON.Entity = value;
					if ((value != null))
					{
						value.PHIEUTRAs.Add(this);
						this._MAPHIEUMUON = value.MAPHIEUMUON;
					}
					else
					{
						this._MAPHIEUMUON = default(int);
					}
					this.SendPropertyChanged("PHIEUMUON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIVIPHAMs(BIVIPHAM entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = this;
		}
		
		private void detach_BIVIPHAMs(BIVIPHAM entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUTRA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANSAOSACH")]
	public partial class BANSAOSACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASACH;
		
		private int _MABANSAO;
		
		private bool _TINHTRANG;
		
		private EntitySet<CHITIETMUONSACH> _CHITIETMUONSACHes;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASACHChanging(int value);
    partial void OnMASACHChanged();
    partial void OnMABANSAOChanging(int value);
    partial void OnMABANSAOChanged();
    partial void OnTINHTRANGChanging(bool value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public BANSAOSACH()
		{
			this._CHITIETMUONSACHes = new EntitySet<CHITIETMUONSACH>(new Action<CHITIETMUONSACH>(this.attach_CHITIETMUONSACHes), new Action<CHITIETMUONSACH>(this.detach_CHITIETMUONSACHes));
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABANSAO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MABANSAO
		{
			get
			{
				return this._MABANSAO;
			}
			set
			{
				if ((this._MABANSAO != value))
				{
					this.OnMABANSAOChanging(value);
					this.SendPropertyChanging();
					this._MABANSAO = value;
					this.SendPropertyChanged("MABANSAO");
					this.OnMABANSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit NOT NULL")]
		public bool TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANSAOSACH_CHITIETMUONSACH", Storage="_CHITIETMUONSACHes", ThisKey="MASACH,MABANSAO", OtherKey="MASACH,MABANSAO")]
		public EntitySet<CHITIETMUONSACH> CHITIETMUONSACHes
		{
			get
			{
				return this._CHITIETMUONSACHes;
			}
			set
			{
				this._CHITIETMUONSACHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_BANSAOSACH", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.BANSAOSACHes.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.BANSAOSACHes.Add(this);
						this._MASACH = value.MASACH;
					}
					else
					{
						this._MASACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONSACHes(CHITIETMUONSACH entity)
		{
			this.SendPropertyChanging();
			entity.BANSAOSACH = this;
		}
		
		private void detach_CHITIETMUONSACHes(CHITIETMUONSACH entity)
		{
			this.SendPropertyChanging();
			entity.BANSAOSACH = null;
		}
	}
}
#pragma warning restore 1591
